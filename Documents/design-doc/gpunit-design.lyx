#LyX 1.6.5 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\use_default_options true
\begin_modules
figs-within-sections
tabs-within-sections
\end_modules
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\float_placement h
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
GPUNIT Design Document
\end_layout

\begin_layout Author

\series bold
Prepared
\series default
 
\series bold
by
\series default
: 
\begin_inset Newline newline
\end_inset

Daniel Bagnell 
\begin_inset Newline newline
\end_inset

Jason Economou 
\begin_inset Newline newline
\end_inset

Rajkumar Jayachandran
\begin_inset Newline newline
\end_inset

Tim McJilton 
\begin_inset Newline newline
\end_inset

Gabe Schwartz 
\begin_inset Newline newline
\end_inset

Andrew Sherman 
\series bold

\begin_inset Newline newline
\end_inset

Advisor
\series default
: 
\begin_inset Newline newline
\end_inset

Prof.
 Jeremy Johnson 
\series bold

\begin_inset Newline newline
\end_inset

Stakeholders
\series default
: 
\begin_inset Newline newline
\end_inset

Prof.
 Steve McMillan 
\begin_inset Newline newline
\end_inset

Alfred Whitehead
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Purpose
\end_layout

\begin_layout Subsection
Scope
\end_layout

\begin_layout Subsection
Glossary
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features islongtable="true" headBottomDL="true">
<column alignment="center" valignment="middle" width="30col%">
<column alignment="center" valignment="top" width="70col%">
<row endhead="true">
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Term
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Definition
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cluster
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A group of networked computing nodes available to perform some task.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compute Node (Node)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A computer that is a member of a cluster.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Architecture
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename arch-diagram.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Architecture Diagram
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Section
Graphical User Interface
\end_layout

\begin_layout Section
Command Line Tool
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Standard
The command line tool(CLT) is used for the running of an experiment file.
 The CLT begins with parse the experiment file.
 After parsing the experiment file the CLT takes the initialization parameters
 and loads them using the AMUSE framework.
 The CLT then takes the modules specified and searches through loaded AMUSE
 modules and initializes the module.
 The CLT following links the modules together to allow interaction and updating
 of the current state of the system using the AMUSE channels.
 The CLT then loads the Logging and Data Analysis scripts specified by the
 experiment file, linking it to the the particle array.
 The CLT then runs through the time specified in the experiment file with
 the delta time specified evolving all of the Modules loaded at each time
 step.
 It will run the data analysis scripts as well as the logging on the <<forget
 the word, will be fixed>>(Periodically? How often it is suppose to run,
 every x time steps...) specified.
 After the model is done evolving it will output using whatever data analysis
 script listed, in the file format specified.
 
\end_layout

\begin_layout Subsection
Preparing Script
\end_layout

\begin_layout Subsubsection
Parts of an Experiment
\end_layout

\begin_layout Subsubsection
Reading in the Experiment file
\end_layout

\begin_layout Section
Experimental Components
\end_layout

\begin_layout Subsection
Experiment Object Model
\end_layout

\begin_layout Subsection
Modules
\end_layout

\begin_layout Subsection
Diagnostics
\end_layout

\begin_layout Subsection
Logging
\end_layout

\begin_layout Section
Networking
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Standard
The networking layer is responsible for communication between the interface
 and the cluster status daemons running on the cluster nodes.
 The user interface and console can send messages through the network which
 will be distributed via IP multicast to any cluster nodes listening to
 a selected multicast group.
 Cluster nodes will be able to send replies to the sender containing information
 such as health stats (CPU usage, memory etc...) and the progress of any experiment
s running on that node.
 The UI and command line tools will use IPC (pipes etc...) to communicate with
 local instances of the control program to send network packets to the cluster
 nodes.
\end_layout

\begin_layout Subsection
Components
\end_layout

\begin_layout Subsubsection
Control Instance
\end_layout

\begin_layout Standard
A control instance is a program that will run in the background on any machine
 wishing to control experiments on a cluster.
 The core scripts (command line tools) and UI will both communicate with
 this instance to perform any network access.
\end_layout

\begin_layout Subsubsection
Node Instance
\end_layout

\begin_layout Standard
Node instances are processes that run on each computing node in the cluster.
 
\end_layout

\begin_layout Section
Data
\end_layout

\begin_layout Subsection
Experiment Specification
\end_layout

\begin_layout Subsection
Module Specification
\end_layout

\begin_layout Subsection
Network Packets
\end_layout

\begin_layout Section
Component Interactions
\end_layout

\begin_layout Standard
SWIM LANE DIAGRAMS GO HERE
\end_layout

\end_body
\end_document
